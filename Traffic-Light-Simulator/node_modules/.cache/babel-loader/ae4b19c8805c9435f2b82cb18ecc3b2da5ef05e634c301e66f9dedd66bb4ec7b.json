{"ast":null,"code":"var _jsxFileName = \"/Users/mayankdhankhar/Documents/Web Programming/traffic-light-simulator/src/TrafficLight.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./TrafficLight.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lights = [\"red\", \"yellow\", \"green\"];\nexport default function TrafficLight() {\n  _s();\n  const [active, setActive] = useState(0);\n  const [pedestrianBlink, setPedestrianBlink] = useState(false);\n  useEffect(() => {\n    let timer;\n    if (lights[active] === \"green\") {\n      // Pedestrian signal blinks every 500ms during green\n      timer = setInterval(() => {\n        setPedestrianBlink(b => !b);\n      }, 500);\n    } else {\n      setPedestrianBlink(false);\n    }\n    return () => clearInterval(timer);\n  }, [active]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setActive(prev => (prev + 1) % lights.length);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [active]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"traffic-light-outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"traffic-light-body\",\n      children: lights.map((color, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `light ${color} ${active === idx ? \"active\" : \"\"}`\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"traffic-light-pole\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"traffic-light-base\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pedestrian-signal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `pedestrian-icon ${lights[active] === \"green\" && pedestrianBlink ? \"blink\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"walk\",\n          children: \"\\uD83D\\uDEB6\\u200D\\u2642\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pedestrian-label\",\n        children: lights[active] === \"green\" ? pedestrianBlink ? \"WALK\" : \"\" : \"WAIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TrafficLight, \"lex/D4pnn/4i6Dzf6PWZJdrHSz4=\");\n_c = TrafficLight;\nvar _c;\n$RefreshReg$(_c, \"TrafficLight\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","lights","TrafficLight","_s","active","setActive","pedestrianBlink","setPedestrianBlink","timer","setInterval","b","clearInterval","setTimeout","prev","length","clearTimeout","className","children","map","color","idx","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["/Users/mayankdhankhar/Documents/Web Programming/traffic-light-simulator/src/TrafficLight.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./TrafficLight.css\";\n\nconst lights = [\"red\", \"yellow\", \"green\"];\n\nexport default function TrafficLight() {\n  const [active, setActive] = useState(0);\n  const [pedestrianBlink, setPedestrianBlink] = useState(false);\n\n  useEffect(() => {\n    let timer;\n    if (lights[active] === \"green\") {\n      // Pedestrian signal blinks every 500ms during green\n      timer = setInterval(() => {\n        setPedestrianBlink((b) => !b);\n      }, 500);\n    } else {\n      setPedestrianBlink(false);\n    }\n    return () => clearInterval(timer);\n  }, [active]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setActive((prev) => (prev + 1) % lights.length);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [active]);\n\n  return (\n    <div className=\"traffic-light-outer\">\n      <div className=\"traffic-light-body\">\n        {lights.map((color, idx) => (\n          <div\n            key={color}\n            className={`light ${color} ${active === idx ? \"active\" : \"\"}`}\n          />\n        ))}\n      </div>\n      <div className=\"traffic-light-pole\" />\n      <div className=\"traffic-light-base\" />\n      <div className=\"pedestrian-signal\">\n        <div className={`pedestrian-icon ${lights[active] === \"green\" && pedestrianBlink ? \"blink\" : \"\"}`}>\n          <span role=\"img\" aria-label=\"walk\">üö∂‚Äç‚ôÇÔ∏è</span>\n        </div>\n        <div className=\"pedestrian-label\">\n          {lights[active] === \"green\" ? (pedestrianBlink ? \"WALK\" : \"\") : \"WAIT\"}\n        </div>\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}